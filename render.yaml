# Example Render service configuration (not strictly required)
# Use this file as a starting point for `render deploy` if you use the Render CLI.
# Adjust names, plan, env vars and database settings as needed.
services:
  - type: web
    name: tawi-web
    env: python
    plan: starter
  # Install dependencies, apply migrations, collect static files during build.
  # Running migrations in the build step ensures the DB schema matches the
  # deployed code before the service starts. This is safe for most apps but
  # can be adjusted if you prefer a separate migration job or manual control.
  buildCommand: "pip install -r requirements.txt && python manage.py migrate --noinput && python manage.py collectstatic --noinput"
  startCommand: "gunicorn tawi_project.wsgi:application --bind 0.0.0.0:$PORT --log-file - --workers 3"
    envVars:
      - key: DJANGO_DEBUG
        value: "False"
      - key: SECRET_KEY
        scope: SECRET
      - key: EMAIL_HOST
        scope: SECRET
      - key: EMAIL_HOST_USER
        scope: SECRET
      - key: EMAIL_HOST_PASSWORD
        scope: SECRET
      - key: STRIPE_SECRET_KEY
        scope: SECRET

# NOTE: The repository now defaults to Postgres for parity with CI. For local
# development Render/example configs should point DATABASE_URL at a Postgres
# instance (managed Postgres or a self-hosted container) rather than a
# repository-local SQLite file.
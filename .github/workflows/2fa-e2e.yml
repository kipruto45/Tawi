name: Django 2FA E2E

on:
  workflow_dispatch:
    inputs:
      run_real:
        description: 'Set to true to run the slow real two_factor E2E when dispatching'
        required: false
        default: 'false'
  push:
    branches:
      - main

jobs:
  e2e-2fa:
    runs-on: ubuntu-latest
    env:
      USE_2FA: '1'
      # DATABASE_URL uses the service DB credentials provided via secrets
      DATABASE_URL: postgresql://postgres:${{ secrets.POSTGRES_PASSWORD }}@127.0.0.1:5432/tawi_db
      # Keep test DB name explicit so CI and local runs match when tests run
      DJANGO_TEST_DB_NAME: 'test_tawi_db'
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: tawi_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install system deps
        run: |
          python -m pip install --upgrade pip
      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt psycopg2-binary
      - name: Wait for Postgres
        run: |
          until pg_isready -h 127.0.0.1 -p 5432; do sleep 1; done
      - name: Run migrations
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: |
          python manage.py migrate --noinput
      - name: Check OTP tables
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
          USE_2FA: '1'
        run: |
          python manage.py check_otp_tables || ( echo 'OTP table check failed' && exit 1 )
      - name: Run 2FA E2E
        run: |
          python manage.py test accounts.tests.test_2fa_wizard_e2e -v 2

  e2e-2fa-real:
    if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.run_real == 'true')
    runs-on: ubuntu-latest
    needs: e2e-2fa
    env:
      USE_2FA: '1'
      DATABASE_URL: postgresql://postgres:${{ secrets.POSTGRES_PASSWORD }}@127.0.0.1:5432/tawi_db
      DJANGO_TEST_DB_NAME: 'test_tawi_db'
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: tawi_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install system deps
        run: |
          python -m pip install --upgrade pip
      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt psycopg2-binary
      - name: Wait for Postgres
        run: |
          until pg_isready -h 127.0.0.1 -p 5432; do sleep 1; done
      - name: Run migrations
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: |
          python manage.py migrate --noinput
      - name: Check OTP tables
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
          USE_2FA: '1'
        run: |
          python manage.py check_otp_tables || ( echo 'OTP table check failed' && exit 1 )
      - name: Run real two_factor E2E
        run: |
          python manage.py test accounts.tests.test_2fa_wizard_e2e_real -v 2
          python manage.py test accounts.tests.test_2fa_integration_real_strict -v 2
